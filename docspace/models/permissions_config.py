# coding: utf-8

"""
    ASC.Web.Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class PermissionsConfig(BaseModel):
    """
    PermissionsConfig
    """ # noqa: E501
    change_history: Optional[StrictBool] = Field(default=None, description="Change history", alias="changeHistory")
    comment: Optional[StrictBool] = Field(default=None, description="Comment")
    chat: Optional[StrictBool] = Field(default=None, description="Chat")
    download: Optional[StrictBool] = Field(default=None, description="Download")
    edit: Optional[StrictBool] = Field(default=None, description="Edit")
    fill_forms: Optional[StrictBool] = Field(default=None, description="FillForms", alias="fillForms")
    modify_filter: Optional[StrictBool] = Field(default=None, description="ModifyFilter", alias="modifyFilter")
    protect: Optional[StrictBool] = Field(default=None, description="Protect")
    var_print: Optional[StrictBool] = Field(default=None, description="Print", alias="print")
    rename: Optional[StrictBool] = Field(default=None, description="Rename")
    review: Optional[StrictBool] = Field(default=None, description="Review")
    copy: Optional[StrictBool] = Field(default=None, description="Copy")
    __properties: ClassVar[List[str]] = ["changeHistory", "comment", "chat", "download", "edit", "fillForms", "modifyFilter", "protect", "print", "rename", "review", "copy"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of PermissionsConfig from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of PermissionsConfig from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "changeHistory": obj.get("changeHistory"),
            "comment": obj.get("comment"),
            "chat": obj.get("chat"),
            "download": obj.get("download"),
            "edit": obj.get("edit"),
            "fillForms": obj.get("fillForms"),
            "modifyFilter": obj.get("modifyFilter"),
            "protect": obj.get("protect"),
            "print": obj.get("print"),
            "rename": obj.get("rename"),
            "review": obj.get("review"),
            "copy": obj.get("copy")
        })
        return _obj


