# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.tenant_dto import TenantDto

class TestTenantDto(unittest.TestCase):
    """TenantDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TenantDto:
        """Test TenantDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TenantDto`
        """
        model = TenantDto()
        if include_optional:
            return TenantDto(
                affiliate_id = 'some text',
                tenant_alias = 'some text',
                calls = True,
                campaign = 'some text',
                creation_date_time = '2008-04-10T06:30+04:00',
                hosted_region = 'some text',
                tenant_id = 1234,
                industry = 0,
                language = 'some text',
                last_modified = '2008-04-10T06:30+04:00',
                mapped_domain = 'some text',
                name = 'Winfield Upton',
                owner_id = '75a5f745-f697-4418-b38d-0fe0d277e258',
                payment_id = 'some text',
                spam = True,
                status = 0,
                status_change_date = '2008-04-10T06:30+04:00',
                time_zone = 'some text',
                trusted_domains = ["some text"],
                trusted_domains_raw = 'some text',
                trusted_domains_type = 0,
                version = 1234,
                version_changed = '2008-04-10T06:30+04:00',
                region = 'some text'
            )
        else:
            return TenantDto(
        )
        """

    def testTenantDto(self):
        """Test TenantDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
