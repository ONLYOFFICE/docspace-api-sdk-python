# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.migration_api_info import MigrationApiInfo

class TestMigrationApiInfo(unittest.TestCase):
    """MigrationApiInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MigrationApiInfo:
        """Test MigrationApiInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MigrationApiInfo`
        """
        model = MigrationApiInfo()
        if include_optional:
            return MigrationApiInfo(
                migrator_name = 'some text',
                operation = 'some text',
                failed_archives = ["some text"],
                users = [
                    docspace.models.migrating_api_user.MigratingApiUser(
                        should_import = True, 
                        key = 'some text', 
                        email = 'Sydney_Roberts4@hotmail.com', 
                        display_name = 'some text', 
                        first_name = 'Winfield', 
                        last_name = 'Wyman', 
                        user_type = 0, 
                        migrating_files = docspace.models.migrating_api_files.MigratingApiFiles(
                            folders_count = 1234, 
                            files_count = 1234, 
                            bytes_total = 1234, ), )
                    ],
                without_email_users = [
                    docspace.models.migrating_api_user.MigratingApiUser(
                        should_import = True, 
                        key = 'some text', 
                        email = 'Sydney_Roberts4@hotmail.com', 
                        display_name = 'some text', 
                        first_name = 'Winfield', 
                        last_name = 'Wyman', 
                        user_type = 0, 
                        migrating_files = docspace.models.migrating_api_files.MigratingApiFiles(
                            folders_count = 1234, 
                            files_count = 1234, 
                            bytes_total = 1234, ), )
                    ],
                exist_users = [
                    docspace.models.migrating_api_user.MigratingApiUser(
                        should_import = True, 
                        key = 'some text', 
                        email = 'Sydney_Roberts4@hotmail.com', 
                        display_name = 'some text', 
                        first_name = 'Winfield', 
                        last_name = 'Wyman', 
                        user_type = 0, 
                        migrating_files = docspace.models.migrating_api_files.MigratingApiFiles(
                            folders_count = 1234, 
                            files_count = 1234, 
                            bytes_total = 1234, ), )
                    ],
                groups = [
                    docspace.models.migrating_api_group.MigratingApiGroup(
                        should_import = True, 
                        group_name = 'some text', 
                        module_name = 'some text', 
                        user_uid_list = ["some text"], )
                    ],
                import_personal_files = True,
                import_shared_files = True,
                import_shared_folders = True,
                import_common_files = True,
                import_project_files = True,
                import_groups = True,
                successed_users = 1234,
                failed_users = 1234,
                files = ["some text"],
                errors = ["some text"]
            )
        else:
            return MigrationApiInfo(
        )
        """

    def testMigrationApiInfo(self):
        """Test MigrationApiInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
