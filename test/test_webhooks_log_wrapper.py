# coding: utf-8

"""
    ASC.Web.Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.webhooks_log_wrapper import WebhooksLogWrapper

class TestWebhooksLogWrapper(unittest.TestCase):
    """WebhooksLogWrapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhooksLogWrapper:
        """Test WebhooksLogWrapper
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhooksLogWrapper`
        """
        model = WebhooksLogWrapper()
        if include_optional:
            return WebhooksLogWrapper(
                response = docspace.models.webhooks_log_dto.WebhooksLogDto(
                    id = 9846, 
                    config_name = 'some text', 
                    creation_time = '2008-04-10T06:30+04:00', 
                    method = 'some text', 
                    route = 'some text', 
                    request_headers = 'some text', 
                    request_payload = 'some text', 
                    response_headers = 'some text', 
                    response_payload = 'some text', 
                    status = 1234, 
                    delivery = '2008-04-10T06:30+04:00', ),
                count = 56,
                links = [
                    docspace.models.active_connections_wrapper_links_inner.ActiveConnectionsWrapper_links_inner(
                        href = '', 
                        action = '', )
                    ],
                status = 56,
                status_code = 56
            )
        else:
            return WebhooksLogWrapper(
        )
        """

    def testWebhooksLogWrapper(self):
        """Test WebhooksLogWrapper"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
