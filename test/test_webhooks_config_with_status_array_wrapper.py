# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.webhooks_config_with_status_array_wrapper import WebhooksConfigWithStatusArrayWrapper

class TestWebhooksConfigWithStatusArrayWrapper(unittest.TestCase):
    """WebhooksConfigWithStatusArrayWrapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhooksConfigWithStatusArrayWrapper:
        """Test WebhooksConfigWithStatusArrayWrapper
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhooksConfigWithStatusArrayWrapper`
        """
        model = WebhooksConfigWithStatusArrayWrapper()
        if include_optional:
            return WebhooksConfigWithStatusArrayWrapper(
                response = [
                    docspace.models.webhooks_config_with_status_dto.WebhooksConfigWithStatusDto(
                        configs = docspace.models.webhooks_config_dto.WebhooksConfigDto(
                            id = 9846, 
                            name = 'Winfield Upton', 
                            uri = 'some text', 
                            enabled = True, 
                            ssl = True, 
                            triggers = 0, 
                            target_id = 'some text', 
                            created_by = docspace.models.employee_dto.EmployeeDto(
                                id = '', 
                                display_name = 'Mike Zanyatski', 
                                title = 'Manager', 
                                avatar = 'some text', 
                                avatar_original = 'some text', 
                                avatar_max = 'some text', 
                                avatar_medium = 'some text', 
                                avatar_small = 'url to small avatar', 
                                profile_url = 'some text', 
                                has_avatar = True, 
                                is_anonim = True, ), 
                            created_on = '2008-04-10T06:30+04:00', 
                            modified_by = docspace.models.employee_dto.EmployeeDto(
                                id = '', 
                                display_name = 'Mike Zanyatski', 
                                title = 'Manager', 
                                avatar = 'some text', 
                                avatar_original = 'some text', 
                                avatar_max = 'some text', 
                                avatar_medium = 'some text', 
                                avatar_small = 'url to small avatar', 
                                profile_url = 'some text', 
                                has_avatar = True, 
                                is_anonim = True, ), 
                            modified_on = '2008-04-10T06:30+04:00', 
                            last_failure_on = '2008-04-10T06:30+04:00', 
                            last_failure_content = 'some text', 
                            last_success_on = '2008-04-10T06:30+04:00', ), 
                        status = 1234, )
                    ],
                count = 56,
                links = [
                    docspace.models.active_connections_wrapper_links_inner.ActiveConnectionsWrapper_links_inner(
                        href = '', 
                        action = '', )
                    ],
                status = 56,
                status_code = 56
            )
        else:
            return WebhooksConfigWithStatusArrayWrapper(
        )
        """

    def testWebhooksConfigWithStatusArrayWrapper(self):
        """Test WebhooksConfigWithStatusArrayWrapper"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
