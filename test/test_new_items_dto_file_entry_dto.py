# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.new_items_dto_file_entry_dto import NewItemsDtoFileEntryDto

class TestNewItemsDtoFileEntryDto(unittest.TestCase):
    """NewItemsDtoFileEntryDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NewItemsDtoFileEntryDto:
        """Test NewItemsDtoFileEntryDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NewItemsDtoFileEntryDto`
        """
        model = NewItemsDtoFileEntryDto()
        if include_optional:
            return NewItemsDtoFileEntryDto(
                var_date = docspace.models.api_date_time.ApiDateTime(
                    utc_time = '2008-04-10T06:30+04:00', 
                    time_zone_offset = '00:00:00', ),
                items = [
                    docspace.models.file_entry_dto.FileEntryDto(
                        title = 'Some titile.txt/ Some title', 
                        access = 0, 
                        shared = False, 
                        created = docspace.models.api_date_time.ApiDateTime(
                            utc_time = '2008-04-10T06:30+04:00', 
                            time_zone_offset = '00:00:00', ), 
                        created_by = docspace.models.employee_dto.EmployeeDto(
                            id = '', 
                            display_name = 'Mike Zanyatski', 
                            title = 'Manager', 
                            avatar = 'some text', 
                            avatar_original = 'some text', 
                            avatar_max = 'some text', 
                            avatar_medium = 'some text', 
                            avatar_small = 'url to small avatar', 
                            profile_url = 'some text', 
                            has_avatar = True, 
                            is_anonim = True, ), 
                        updated = docspace.models.api_date_time.ApiDateTime(
                            utc_time = '2008-04-10T06:30+04:00', 
                            time_zone_offset = '00:00:00', ), 
                        auto_delete = , 
                        root_folder_type = 0, 
                        parent_room_type = 0, 
                        updated_by = docspace.models.employee_dto.EmployeeDto(
                            id = '', 
                            display_name = 'Mike Zanyatski', 
                            title = 'Manager', 
                            avatar = 'some text', 
                            avatar_original = 'some text', 
                            avatar_max = 'some text', 
                            avatar_medium = 'some text', 
                            avatar_small = 'url to small avatar', 
                            profile_url = 'some text', 
                            has_avatar = True, 
                            is_anonim = True, ), 
                        provider_item = True, 
                        provider_key = 'some text', 
                        provider_id = 1234, 
                        order = 'some text', 
                        file_entry_type = 1, )
                    ]
            )
        else:
            return NewItemsDtoFileEntryDto(
        )
        """

    def testNewItemsDtoFileEntryDto(self):
        """Test NewItemsDtoFileEntryDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
