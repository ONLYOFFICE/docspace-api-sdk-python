# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.quota_dto import QuotaDto

class TestQuotaDto(unittest.TestCase):
    """QuotaDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QuotaDto:
        """Test QuotaDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QuotaDto`
        """
        model = QuotaDto()
        if include_optional:
            return QuotaDto(
                id = 9846,
                title = 'legacy_1080p_small_wooden_mouse',
                price = docspace.models.price_dto.PriceDto(
                    value = 10, 
                    currency_symbol = 'some text', 
                    iso_currency_symbol = 'some text', ),
                non_profit = True,
                free = True,
                trial = True,
                features = [
                    docspace.models.tenant_quota_feature_dto.TenantQuotaFeatureDto(
                        id = '9846', 
                        title = 'legacy_1080p_small_wooden_mouse', 
                        image = 'some text', 
                        value = {"int":1234,"string":"some text","boolean":true}, 
                        type = 'some text', 
                        used = docspace.models.feature_used_dto.FeatureUsedDto(
                            value = {"int":1234,"string":"some text","boolean":true}, 
                            title = 'legacy_1080p_small_wooden_mouse', ), 
                        price_title = 'some text', )
                    ],
                users_quota = docspace.models.tenant_entity_quota_settings.TenantEntityQuotaSettings(
                    enable_quota = True, 
                    default_quota = 1234, 
                    last_recalculate_date = '2008-04-10T06:30+04:00', ),
                rooms_quota = docspace.models.tenant_entity_quota_settings.TenantEntityQuotaSettings(
                    enable_quota = True, 
                    default_quota = 1234, 
                    last_recalculate_date = '2008-04-10T06:30+04:00', ),
                tenant_custom_quota = docspace.models.tenant_quota_settings.TenantQuotaSettings(
                    enable_quota = True, 
                    quota = 1234, 
                    last_recalculate_date = '2008-04-10T06:30+04:00', 
                    last_modified = '2008-04-10T06:30+04:00', ),
                due_date = '2008-04-10T06:30+04:00'
            )
        else:
            return QuotaDto(
        )
        """

    def testQuotaDto(self):
        """Test QuotaDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
