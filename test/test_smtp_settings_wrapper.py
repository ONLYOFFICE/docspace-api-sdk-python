# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.smtp_settings_wrapper import SmtpSettingsWrapper

class TestSmtpSettingsWrapper(unittest.TestCase):
    """SmtpSettingsWrapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SmtpSettingsWrapper:
        """Test SmtpSettingsWrapper
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SmtpSettingsWrapper`
        """
        model = SmtpSettingsWrapper()
        if include_optional:
            return SmtpSettingsWrapper(
                response = docspace.models.smtp_settings_dto.SmtpSettingsDto(
                    host = 'mail.example.com', 
                    port = 25, 
                    sender_address = 'notify@example.com', 
                    sender_display_name = 'Postman', 
                    credentials_user_name = 'notify@example.com', 
                    credentials_user_password = '{password}', 
                    enable_ssl = False, 
                    enable_auth = True, 
                    use_ntlm = False, 
                    is_default_settings = False, ),
                count = 56,
                links = [
                    docspace.models.active_connections_wrapper_links_inner.ActiveConnectionsWrapper_links_inner(
                        href = '', 
                        action = '', )
                    ],
                status = 56,
                status_code = 56
            )
        else:
            return SmtpSettingsWrapper(
        )
        """

    def testSmtpSettingsWrapper(self):
        """Test SmtpSettingsWrapper"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
