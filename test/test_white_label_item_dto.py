# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.white_label_item_dto import WhiteLabelItemDto

class TestWhiteLabelItemDto(unittest.TestCase):
    """WhiteLabelItemDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WhiteLabelItemDto:
        """Test WhiteLabelItemDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WhiteLabelItemDto`
        """
        model = WhiteLabelItemDto()
        if include_optional:
            return WhiteLabelItemDto(
                name = 'Winfield Upton',
                size = docspace.models.i_magick_geometry.IMagickGeometry(
                    aspect_ratio = True, 
                    fill_area = True, 
                    greater = True, 
                    height = 56, 
                    ignore_aspect_ratio = True, 
                    is_percentage = True, 
                    less = True, 
                    limit_pixels = True, 
                    width = 56, 
                    x = 1234, 
                    y = 1234, ),
                path = docspace.models.white_label_item_path_dto.WhiteLabelItemPathDto(
                    light = 'some text', 
                    dark = 'some text', )
            )
        else:
            return WhiteLabelItemDto(
        )
        """

    def testWhiteLabelItemDto(self):
        """Test WhiteLabelItemDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
