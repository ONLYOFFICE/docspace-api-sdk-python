# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.configuration_integer_wrapper import ConfigurationIntegerWrapper

class TestConfigurationIntegerWrapper(unittest.TestCase):
    """ConfigurationIntegerWrapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigurationIntegerWrapper:
        """Test ConfigurationIntegerWrapper
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigurationIntegerWrapper`
        """
        model = ConfigurationIntegerWrapper()
        if include_optional:
            return ConfigurationIntegerWrapper(
                response = docspace.models.configuration_dto_integer.ConfigurationDtoInteger(
                    document = docspace.models.document_config_dto.DocumentConfigDto(
                        file_type = 'some text', 
                        info = docspace.models.info_config_dto.InfoConfigDto(
                            favorite = True, 
                            folder = 'some text', 
                            owner = 'some text', 
                            sharing_settings = [
                                docspace.models.ace_short_wrapper.AceShortWrapper(
                                    user = 'some text', 
                                    permissions = 'some text', 
                                    is_link = True, )
                                ], 
                            type = 0, 
                            uploaded = 'some text', ), 
                        is_linked_for_me = True, 
                        key = 'some text', 
                        permissions = docspace.models.permissions_config.PermissionsConfig(
                            change_history = True, 
                            comment = True, 
                            chat = True, 
                            download = True, 
                            edit = True, 
                            fill_forms = True, 
                            modify_filter = True, 
                            protect = True, 
                            print = True, 
                            rename = True, 
                            review = True, 
                            copy = True, ), 
                        shared_link_param = 'some text', 
                        shared_link_key = 'some text', 
                        reference_data = docspace.models.file_reference_data.FileReferenceData(
                            file_key = 'some text', 
                            instance_id = '9846', 
                            room_id = '9846', ), 
                        title = 'legacy_1080p_small_wooden_mouse', 
                        url = 'some text', 
                        is_form = True, 
                        options = docspace.models.options.Options(
                            watermark_on_draw = docspace.models.watermark_on_draw.WatermarkOnDraw(
                                width = -8.5, 
                                height = -8.5, 
                                margins = [1234], 
                                fill = 'some text', 
                                rotate = 1234, 
                                transparent = -8.5, 
                                paragraphs = [
                                    docspace.models.paragraph.Paragraph(
                                        align = 1234, 
                                        runs = [
                                            docspace.models.run.Run(
                                                fill = [1234], 
                                                text = 'some text', 
                                                font_size = 'some text', )
                                            ], )
                                    ], ), ), ), 
                    document_type = 'some text', 
                    editor_config = docspace.models.editor_configuration_dto.EditorConfigurationDto(
                        callback_url = 'some text', 
                        co_editing = docspace.models.co_editing_config.CoEditingConfig(
                            change = True, 
                            fast = True, 
                            mode = 0, ), 
                        create_url = 'some text', 
                        customization = docspace.models.customization_config_dto.CustomizationConfigDto(
                            about = True, 
                            customer = docspace.models.customer_config_dto.CustomerConfigDto(
                                address = 'some text', 
                                logo = 'some text', 
                                logo_dark = 'some text', 
                                mail = 'some text', 
                                name = 'Winfield Upton', 
                                www = 'some text', ), 
                            anonymous = docspace.models.anonymous_config_dto.AnonymousConfigDto(
                                request = True, ), 
                            feedback = docspace.models.feedback_config.FeedbackConfig(
                                url = 'some text', 
                                visible = True, ), 
                            forcesave = True, 
                            goback = docspace.models.goback_config.GobackConfig(
                                url = 'some text', ), 
                            logo = docspace.models.logo_config_dto.LogoConfigDto(
                                image = 'some text', 
                                image_dark = 'some text', 
                                image_embedded = 'some text', 
                                url = 'some text', 
                                visible = True, ), 
                            mention_share = True, 
                            review_display = 'some text', 
                            submit_form = docspace.models.submit_form.SubmitForm(
                                visible = True, 
                                result_message = 'some text', ), 
                            start_filling_form = docspace.models.start_filling_form.StartFillingForm(
                                text = 'some text', ), ), 
                        embedded = docspace.models.embedded_config.EmbeddedConfig(
                            embed_url = 'some text', 
                            save_url = 'some text', 
                            share_link_param = 'some text', 
                            share_url = 'some text', 
                            toolbar_docked = 'some text', ), 
                        encryption_keys = docspace.models.encryption_keys_config.EncryptionKeysConfig(
                            crypto_engine_id = 'some text', 
                            private_key_enc = 'some text', 
                            public_key = 'some text', ), 
                        lang = 'some text', 
                        mode = 'some text', 
                        mode_write = True, 
                        plugins = docspace.models.plugins_config.PluginsConfig(
                            plugins_data = ["some text"], ), 
                        recent = [
                            docspace.models.recent_config.RecentConfig(
                                folder = 'some text', 
                                title = 'legacy_1080p_small_wooden_mouse', 
                                url = 'some text', )
                            ], 
                        templates = [
                            docspace.models.templates_config.TemplatesConfig(
                                image = 'some text', 
                                title = 'legacy_1080p_small_wooden_mouse', 
                                url = 'some text', )
                            ], 
                        user = docspace.models.user_config.UserConfig(
                            id = '9846', 
                            name = 'Winfield Upton', 
                            image = 'some text', 
                            roles = ["some text"], ), ), 
                    editor_type = 0, 
                    editor_url = 'some text', 
                    token = 'some text', 
                    type = 'some text', 
                    file = docspace.models.file_dto_integer.FileDtoInteger(
                        title = 'Some titile.txt/ Some title', 
                        access = 0, 
                        shared = False, 
                        created = docspace.models.api_date_time.ApiDateTime(
                            utc_time = '2008-04-10T06:30+04:00', 
                            time_zone_offset = '00:00:00', ), 
                        created_by = docspace.models.employee_dto.EmployeeDto(
                            id = '', 
                            display_name = 'Mike Zanyatski', 
                            title = 'Manager', 
                            avatar = 'some text', 
                            avatar_original = 'some text', 
                            avatar_max = 'some text', 
                            avatar_medium = 'some text', 
                            avatar_small = 'url to small avatar', 
                            profile_url = 'some text', 
                            has_avatar = True, 
                            is_anonim = True, ), 
                        updated = docspace.models.api_date_time.ApiDateTime(
                            utc_time = '2008-04-10T06:30+04:00', 
                            time_zone_offset = '00:00:00', ), 
                        auto_delete = , 
                        root_folder_type = 0, 
                        parent_room_type = 0, 
                        updated_by = docspace.models.employee_dto.EmployeeDto(
                            id = '', 
                            display_name = 'Mike Zanyatski', 
                            title = 'Manager', 
                            avatar = 'some text', 
                            avatar_original = 'some text', 
                            avatar_max = 'some text', 
                            avatar_medium = 'some text', 
                            avatar_small = 'url to small avatar', 
                            profile_url = 'some text', 
                            has_avatar = True, 
                            is_anonim = True, ), 
                        provider_item = True, 
                        provider_key = 'some text', 
                        provider_id = 1234, 
                        order = 'some text', 
                        id = 10, 
                        root_folder_id = 1234, 
                        origin_id = 1234, 
                        origin_room_id = 1234, 
                        origin_title = 'some text', 
                        origin_room_title = 'some text', 
                        can_share = True, 
                        security = [{"value":true}], 
                        request_token = 'some text', 
                        folder_id = 9846, 
                        version = 3, 
                        version_group = 1, 
                        content_length = '12345', 
                        pure_content_length = 1234, 
                        file_status = 0, 
                        mute = False, 
                        view_url = 'https://www.onlyoffice.com/viewfile?fileid=2221', 
                        web_url = 'some text', 
                        short_web_url = 'some text', 
                        file_type = 0, 
                        file_exst = '.txt', 
                        comment = 'some text', 
                        encrypted = False, 
                        thumbnail_url = 'some text', 
                        thumbnail_status = 0, 
                        locked = True, 
                        locked_by = 'some text', 
                        has_draft = False, 
                        form_filling_status = 0, 
                        is_form = False, 
                        custom_filter_enabled = True, 
                        custom_filter_enabled_by = 'some text', 
                        start_filling = False, 
                        in_process_folder_id = 1234, 
                        in_process_folder_title = 'some text', 
                        draft_location = docspace.models.draft_location_integer.DraftLocationInteger(
                            folder_id = 9846, 
                            folder_title = 'some text', 
                            file_id = 9846, 
                            file_title = 'some text', ), 
                        view_accessibility = [{"value":true}], 
                        available_external_rights = [{"key":"some text","value":true}], 
                        last_opened = , 
                        expired = , 
                        file_entry_type = 1, ), 
                    error_message = 'some text', 
                    start_filling = True, 
                    filling_status = True, 
                    start_filling_mode = 0, 
                    filling_session_id = 'some text', ),
                count = 56,
                links = [
                    docspace.models.active_connections_wrapper_links_inner.ActiveConnectionsWrapper_links_inner(
                        href = '', 
                        action = '', )
                    ],
                status = 56,
                status_code = 56
            )
        else:
            return ConfigurationIntegerWrapper(
        )
        """

    def testConfigurationIntegerWrapper(self):
        """Test ConfigurationIntegerWrapper"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
