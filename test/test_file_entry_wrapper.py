# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.file_entry_wrapper import FileEntryWrapper

class TestFileEntryWrapper(unittest.TestCase):
    """FileEntryWrapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FileEntryWrapper:
        """Test FileEntryWrapper
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FileEntryWrapper`
        """
        model = FileEntryWrapper()
        if include_optional:
            return FileEntryWrapper(
                response = docspace.models.file_entry_dto.FileEntryDto(
                    title = 'Some titile.txt/ Some title', 
                    access = 0, 
                    shared = False, 
                    created = docspace.models.api_date_time.ApiDateTime(
                        utc_time = '2008-04-10T06:30+04:00', 
                        time_zone_offset = '00:00:00', ), 
                    created_by = docspace.models.employee_dto.EmployeeDto(
                        id = '', 
                        display_name = 'Mike Zanyatski', 
                        title = 'Manager', 
                        avatar = 'some text', 
                        avatar_original = 'some text', 
                        avatar_max = 'some text', 
                        avatar_medium = 'some text', 
                        avatar_small = 'url to small avatar', 
                        profile_url = 'some text', 
                        has_avatar = True, 
                        is_anonim = True, ), 
                    updated = docspace.models.api_date_time.ApiDateTime(
                        utc_time = '2008-04-10T06:30+04:00', 
                        time_zone_offset = '00:00:00', ), 
                    auto_delete = , 
                    root_folder_type = 0, 
                    parent_room_type = 0, 
                    updated_by = docspace.models.employee_dto.EmployeeDto(
                        id = '', 
                        display_name = 'Mike Zanyatski', 
                        title = 'Manager', 
                        avatar = 'some text', 
                        avatar_original = 'some text', 
                        avatar_max = 'some text', 
                        avatar_medium = 'some text', 
                        avatar_small = 'url to small avatar', 
                        profile_url = 'some text', 
                        has_avatar = True, 
                        is_anonim = True, ), 
                    provider_item = True, 
                    provider_key = 'some text', 
                    provider_id = 1234, 
                    order = 'some text', 
                    file_entry_type = 1, ),
                count = 56,
                links = [
                    docspace.models.active_connections_wrapper_links_inner.ActiveConnectionsWrapper_links_inner(
                        href = '', 
                        action = '', )
                    ],
                status = 56,
                status_code = 56
            )
        else:
            return FileEntryWrapper(
        )
        """

    def testFileEntryWrapper(self):
        """Test FileEntryWrapper"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
