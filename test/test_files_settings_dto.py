# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.files_settings_dto import FilesSettingsDto

class TestFilesSettingsDto(unittest.TestCase):
    """FilesSettingsDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FilesSettingsDto:
        """Test FilesSettingsDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FilesSettingsDto`
        """
        model = FilesSettingsDto()
        if include_optional:
            return FilesSettingsDto(
                exts_image_previewed = ["some text"],
                exts_media_previewed = ["some text"],
                exts_web_previewed = ["some text"],
                exts_web_edited = ["some text"],
                exts_web_encrypt = ["some text"],
                exts_web_reviewed = ["some text"],
                exts_web_custom_filter_editing = ["some text"],
                exts_web_restricted_editing = ["some text"],
                exts_web_commented = ["some text"],
                exts_web_template = ["some text"],
                exts_co_authoring = ["some text"],
                exts_must_convert = ["some text"],
                exts_convertible = [{"key":"some text","value":["some text"]}],
                exts_uploadable = ["some text"],
                exts_archive = ["some text"],
                exts_video = ["some text"],
                exts_audio = ["some text"],
                exts_image = ["some text"],
                exts_spreadsheet = ["some text"],
                exts_presentation = ["some text"],
                exts_document = ["some text"],
                internal_formats = [{"value":"some text"}],
                master_form_extension = 'some text',
                param_version = 'some text',
                param_out_type = 'some text',
                file_download_url_string = 'some text',
                file_web_viewer_url_string = 'some text',
                file_web_viewer_external_url_string = 'some text',
                file_web_editor_url_string = 'some text',
                file_web_editor_external_url_string = 'some text',
                file_redirect_preview_url_string = 'some text',
                file_thumbnail_url_string = 'some text',
                confirm_delete = True,
                enable_third_party = True,
                external_share = True,
                external_share_social_media = True,
                store_original_files = True,
                keep_new_file_name = True,
                display_file_extension = True,
                convert_notify = True,
                hide_confirm_cancel_operation = True,
                hide_confirm_convert_save = True,
                hide_confirm_convert_open = True,
                hide_confirm_room_lifetime = True,
                default_order = docspace.models.order_by.OrderBy(
                    is_asc = True, 
                    property = 0, ),
                forcesave = True,
                store_forcesave = True,
                recent_section = True,
                favorites_section = True,
                templates_section = True,
                download_tar_gz = True,
                automatically_clean_up = docspace.models.auto_clean_up_data.AutoCleanUpData(
                    is_auto_clean_up = True, 
                    gap = 1, ),
                can_search_by_content = True,
                default_sharing_access_rights = [
                    0
                    ],
                max_upload_thread_count = 1234,
                chunk_upload_size = 1234,
                open_editor_in_same_tab = True
            )
        else:
            return FilesSettingsDto(
        )
        """

    def testFilesSettingsDto(self):
        """Test FilesSettingsDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
