# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.web_plugin_dto import WebPluginDto

class TestWebPluginDto(unittest.TestCase):
    """WebPluginDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebPluginDto:
        """Test WebPluginDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebPluginDto`
        """
        model = WebPluginDto()
        if include_optional:
            return WebPluginDto(
                name = 'Winfield Upton',
                version = 'some text',
                description = 'some text',
                license = 'some text',
                author = 'some text',
                home_page = 'some text',
                plugin_name = 'some text',
                scopes = 'some text',
                image = 'some text',
                create_by = docspace.models.employee_dto.EmployeeDto(
                    id = '', 
                    display_name = 'Mike Zanyatski', 
                    title = 'Manager', 
                    avatar = 'some text', 
                    avatar_original = 'some text', 
                    avatar_max = 'some text', 
                    avatar_medium = 'some text', 
                    avatar_small = 'url to small avatar', 
                    profile_url = 'some text', 
                    has_avatar = True, 
                    is_anonim = True, ),
                create_on = '2008-04-10T06:30+04:00',
                enabled = True,
                system = True,
                url = 'some text',
                settings = 'some text'
            )
        else:
            return WebPluginDto(
        )
        """

    def testWebPluginDto(self):
        """Test WebPluginDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
