# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.auth_service_requests_array_wrapper import AuthServiceRequestsArrayWrapper

class TestAuthServiceRequestsArrayWrapper(unittest.TestCase):
    """AuthServiceRequestsArrayWrapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AuthServiceRequestsArrayWrapper:
        """Test AuthServiceRequestsArrayWrapper
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AuthServiceRequestsArrayWrapper`
        """
        model = AuthServiceRequestsArrayWrapper()
        if include_optional:
            return AuthServiceRequestsArrayWrapper(
                response = [
                    docspace.models.auth_service_requests_dto.AuthServiceRequestsDto(
                        name = 'Winfield Upton', 
                        title = 'legacy_1080p_small_wooden_mouse', 
                        description = 'some text', 
                        instruction = 'some text', 
                        can_set = True, 
                        props = [
                            docspace.models.auth_key.AuthKey(
                                name = 'Winfield Upton', 
                                value = 'some text', 
                                title = 'legacy_1080p_small_wooden_mouse', )
                            ], )
                    ],
                count = 56,
                links = [
                    docspace.models.active_connections_wrapper_links_inner.ActiveConnectionsWrapper_links_inner(
                        href = '', 
                        action = '', )
                    ],
                status = 56,
                status_code = 56
            )
        else:
            return AuthServiceRequestsArrayWrapper(
        )
        """

    def testAuthServiceRequestsArrayWrapper(self):
        """Test AuthServiceRequestsArrayWrapper"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
