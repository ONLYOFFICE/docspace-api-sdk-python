# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from docspace.models.backup_progress_wrapper import BackupProgressWrapper

class TestBackupProgressWrapper(unittest.TestCase):
    """BackupProgressWrapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackupProgressWrapper:
        """Test BackupProgressWrapper
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackupProgressWrapper`
        """
        model = BackupProgressWrapper()
        if include_optional:
            return BackupProgressWrapper(
                response = docspace.models.backup_progress.BackupProgress(
                    is_completed = True, 
                    progress = 1234, 
                    error = 'some text', 
                    link = 'some text', 
                    tenant_id = 1234, 
                    backup_progress_enum = 0, 
                    task_id = 'some text', ),
                count = 56,
                links = [
                    docspace.models.active_connections_wrapper_links_inner.ActiveConnectionsWrapper_links_inner(
                        href = '', 
                        action = '', )
                    ],
                status = 56,
                status_code = 56
            )
        else:
            return BackupProgressWrapper(
        )
        """

    def testBackupProgressWrapper(self):
        """Test BackupProgressWrapper"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
